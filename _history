{"entries":[{"timestamp":1749166157285,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":131,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":1178,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":228,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1749166755898,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":141,"length1":34,"diffs":[[1,"        let y = fromTop ? 80 : 120\n"]]},{"start1":448,"length1":22,"diffs":[[1,"        bone.vx = -50\n"]]},{"start1":838,"length1":37,"diffs":[[1,"controller.moveSprite(heart, 100, 100)\n"]]},{"start1":922,"length1":134,"diffs":[[1,""]]},{"start1":923,"length1":439,"diffs":[[1,""]]}]}]},{"timestamp":1749167452377,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":395,"length1":39,"diffs":[[1,"        bone.setPosition(160 + i * 20\n"]]}]}]},{"timestamp":1749167452875,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":141,"length1":34,"diffs":[[1,"        let y = fromTop ? 75 : 85\n"]]},{"start1":214,"length1":660,"diffs":[[1,"            . 1 .\n            . 1 .\n            . 1 .\n            . 1 .\n            . 1 .\n            . 1 .\n            . 1 .\n            . 1 .\n"]]},{"start1":395,"length1":38,"diffs":[[1,"        bone.setPosition(160 + i * 200\n"]]}]}]},{"timestamp":1749167957790,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":37,"length1":351,"diffs":[[1,""]]},{"start1":38,"length1":193,"diffs":[[1,""]]},{"start1":1570,"length1":111,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":92,"length1":84,"diffs":[[1,"        \"device\": \"*\"\n"]]}]}]},{"timestamp":1749168543720,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":183,"length1":150,"diffs":[[1,"    let bubble = textsprite.create(\"You feel like\\nyou're going to\\nhave a bad time\", 8, 1)\n    bubble.setPosition(80, 40)\n"]]},{"start1":334,"length1":83,"diffs":[[1,"    bubble.setFlag(SpriteFlag.RelativeToCamera, true)\n\n"]]},{"start1":426,"length1":0,"diffs":[[1,"    bubble.setPosition(x, y)\n    bubble.setOutline(1, 7)\n    bubble.setFlag(SpriteFlag.RelativeToCamera, true)\n    pause(duration)\n    bubble.destroy()\n"]]},{"start1":1507,"length1":22,"diffs":[[1,"        bone.vx = -80\n"]]},{"start1":1897,"length1":37,"diffs":[[1,"controller.moveSprite(heart, 50, 50)\n"]]}]}]},{"timestamp":1749169315399,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":183,"length1":92,"diffs":[[1,"    let bubble = textsprite.create(\"You feel like you're going to have a bad time\", 15, 1)\n"]]}]}]},{"timestamp":1749169437821,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":183,"length1":546,"diffs":[[1,"    let bubble = textsprite.create(\"You feel like/ you're going to have a bad time\", 15, 1)\n    bubble.setPosition(box.x, box.y - box.height / 2 - 10)\n    bubble.setOutline(1, 7)\n    bubble.setFlag(SpriteFlag.RelativeToCamera, false)  // or true if camera moves\n    pause(3000)\n    bubble.destroy()\n"]]}]}]},{"timestamp":1749169909548,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":84,"diffs":[[1,"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>"]]}]}]},{"timestamp":1749173796783,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":290,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1749166157284,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"under the under the undertale\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1749167957790,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"enum SpriteKindCustom {\n    Attack\n}\n\nfunction spawnVerticalBoneWaves() {\n    for (let i = 0; i < 6; i++) {\n        let fromTop = i % 2 == 0\n        let y = fromTop ? 95 : 65\n        let bone = sprites.create(img`\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n        `, SpriteKindCustom.Attack)\n\n        bone.setPosition(160 + i * 20\n\n        , y)\n        bone.vx = -80\n        bone.lifespan = 4000\n        if (!fromTop) {\n            bone.image.flipY()\n        }\n    }\n}\n\n// Example player sprite\nlet heart = sprites.create(img`\n    . . . . . . . .\n    . . . 2 2 . . .\n    . 2 2 4 4 2 2 .\n    . 2 4 5 5 4 2 .\n    . 2 4 5 5 4 2 .\n    . 2 2 4 4 2 2 .\n    . . 2 2 2 2 . .\n    . . . 2 2 . . .\n`, SpriteKind.Player)\nheart.setPosition(80, 80)\ncontroller.moveSprite(heart, 50, 50)\nheart.setFlag(SpriteFlag.StayInScreen, true)\n// player\nlet box = sprites.create(image.create(80, 60), SpriteKind.Food)\nbox.image.drawRect(0, 0, 80, 60, 1)\nbox.setPosition(80, 80)\n\n// â›“ Keep heart inside box\ngame.onUpdate(function () {\n    let minX = box.x - box.width / 2 + heart.width / 2\n    let maxX = box.x + box.width / 2 - heart.width / 2\n    let minY = box.y - box.height / 2 + heart.height / 2\n    let maxY = box.y + box.height / 2 - heart.height / 2\n\n    if (heart.x < minX) heart.x = minX\n    if (heart.x > maxX) heart.x = maxX\n    if (heart.y < minY) heart.y = minY\n    if (heart.y > maxY) heart.y = maxY\n})\n// Collision\nsprites.onOverlap(SpriteKind.Player, SpriteKindCustom.Attack, function (player, bone) {\n    bone.destroy()\n    info.changeLifeBy(-1)\n})\n\n// Spawn wave every 3 seconds\ngame.onUpdateInterval(3000, function () {\n    spawnVerticalBoneWaves()\n})\n\n","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"under the under the undertale\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1749169759869,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"enum SpriteKindCustom {\n    Attack\n}\nfunction showUndertaleTextBubble(text: string, x: number, y: number, duration: number = 3000) {\n    // The third parameter is max width in pixels\n    let bubble = textsprite.create(\"You feel like\", 15, 1)\n    bubble.setPosition(box.x + 90, box.y + 60 - box.height / 2 - 10)\n    bubble.setOutline(1, 7)\n    bubble.setFlag(SpriteFlag.RelativeToCamera, false)  // or true if camera moves\n    pause(3000)\n    bubble.destroy()\n}\n\n}\n\nfunction spawnVerticalBoneWaves() {\n    for (let i = 0; i < 6; i++) {\n        let fromTop = i % 2 == 0\n        let y = fromTop ? 95 : 65\n        let bone = sprites.create(img`\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n        `, SpriteKindCustom.Attack)\n\n        bone.setPosition(160 + i * 20\n\n        , y)\n        bone.vx = -90\n        bone.lifespan = 4000\n        if (!fromTop) {\n            bone.image.flipY()\n        }\n    }\n}\n\n// Example player sprite\nlet heart = sprites.create(img`\n    . . . . . . . .\n    . . . 2 2 . . .\n    . 2 2 4 4 2 2 .\n    . 2 4 5 5 4 2 .\n    . 2 4 5 5 4 2 .\n    . 2 2 4 4 2 2 .\n    . . 2 2 2 2 . .\n    . . . 2 2 . . .\n`, SpriteKind.Player)\nheart.setPosition(80, 80)\ncontroller.moveSprite(heart, 60, 60)\nheart.setFlag(SpriteFlag.StayInScreen, true)\n// player\nlet box = sprites.create(image.create(80, 60), SpriteKind.Food)\nbox.image.drawRect(0, 0, 80, 60, 1)\nbox.setPosition(80, 80)\n\nshowUndertaleTextBubble(\"you feel like you're going to have a bad time\", box.x, box.y - box.height / 2 - 10)\n\n\n// â›“ Keep heart inside box\ngame.onUpdate(function () {\n    let minX = box.x - box.width / 2 + heart.width / 2\n    let maxX = box.x + box.width / 2 - heart.width / 2\n    let minY = box.y - box.height / 2 + heart.height / 2\n    let maxY = box.y + box.height / 2 - heart.height / 2\n\n    if (heart.x < minX) heart.x = minX\n    if (heart.x > maxX) heart.x = maxX\n    if (heart.y < minY) heart.y = minY\n    if (heart.y > maxY) heart.y = maxY\n})\n// Collision\nsprites.onOverlap(SpriteKind.Player, SpriteKindCustom.Attack, function (player, bone) {\n    bone.destroy()\n    info.changeLifeBy(-1)\n})\n\n// Spawn wave every 3 seconds\ngame.onUpdateInterval(3000, function () {\n    spawnVerticalBoneWaves()\n})\n\n","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"under the under the undertale\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1749173796783,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block></xml>","main.ts":"enum SpriteKindCustom {\n    Attack\n}\nfunction showUndertaleTextBubble(text: string, x: number, y: number, duration: number = 3000) {\n    // The third parameter is max width in pixels\n    // First line\n    let bubble1 = textsprite.create(\"you feel like\", 15, 1)\n    bubble1.setOutline(1, 15) // white text, black outline\n    bubble1.setPosition(box.x, box.y - box.height / 2 - 20)\n\n    // Second line\n    let bubble2 = textsprite.create(\"you're going to\", 15, 1)\n    bubble2.setOutline(1, 15)\n    bubble2.setPosition(box.x, box.y - box.height / 2 - 10)\n\n    // Third line\n    let bubble3 = textsprite.create(\"have a bad time\", 15, 1)\n    bubble3.setOutline(1, 15)\n    bubble3.setPosition(box.x, box.y - box.height / 2)\n\n    \n    \n}\n\n\nfunction spawnVerticalBoneWaves() {\n    for (let i = 0; i < 6; i++) {\n        let fromTop = i % 2 == 0\n        let y = fromTop ? 95 : 65\n        let bone = sprites.create(img`\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n                . 1 .\n        `, SpriteKindCustom.Attack)\n\n        bone.setPosition(160 + i * 20\n\n        , y)\n        bone.vx = -90\n        bone.lifespan = 4000\n        if (!fromTop) {\n            bone.image.flipY()\n        }\n    }\n}\n\n// Example player sprite\nlet heart = sprites.create(img`\n    . . . . . . . .\n    . . . 2 2 . . .\n    . 2 2 4 4 2 2 .\n    . 2 4 5 5 4 2 .\n    . 2 4 5 5 4 2 .\n    . 2 2 4 4 2 2 .\n    . . 2 2 2 2 . .\n    . . . 2 2 . . .\n`, SpriteKind.Player)\nheart.setPosition(80, 80)\ncontroller.moveSprite(heart, 60, 60)\nheart.setFlag(SpriteFlag.StayInScreen, true)\n// player\nlet box = sprites.create(image.create(80, 60), SpriteKind.Food)\nbox.image.drawRect(0, 0, 80, 60, 1)\nbox.setPosition(80, 80)\n\nshowUndertaleTextBubble(\"you feel like you're going to have a bad time\", box.x, box.y - box.height / 2 - 10)\n\n\n// â›“ Keep heart inside box\ngame.onUpdate(function () {\n    let minX = box.x - box.width / 2 + heart.width / 2\n    let maxX = box.x + box.width / 2 - heart.width / 2\n    let minY = box.y - box.height / 2 + heart.height / 2\n    let maxY = box.y + box.height / 2 - heart.height / 2\n\n    if (heart.x < minX) heart.x = minX\n    if (heart.x > maxX) heart.x = maxX\n    if (heart.y < minY) heart.y = minY\n    if (heart.y > maxY) heart.y = maxY\n})\n// Collision\nsprites.onOverlap(SpriteKind.Player, SpriteKindCustom.Attack, function (player, bone) {\n    bone.destroy()\n    info.changeLifeBy(-1)\n})\n\n// Spawn wave every 3 seconds\ngame.onUpdateInterval(3000, function () {\n    spawnVerticalBoneWaves()\n})\n\n","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"under the under the undertale\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-text\": \"github:microsoft/arcade-text#v1.3.0\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1749173796785}